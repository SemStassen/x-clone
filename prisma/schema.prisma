// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Tweet {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  parentId  String?  @map("parent_id")
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes     Like[]
  parent    Tweet?   @relation("TweetToTweet", fields: [parentId], references: [id], onDelete: Cascade)
  Tweet     Tweet[]  @relation("TweetToTweet")

  @@map("tweets")
}

model Like {
  userId  String @map("user_id")
  tweetId String @map("tweet_id")

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)

  @@id([userId, tweetId])
  @@map("likes")
}

model Profile {
  id         String   @id @default(uuid())
  userId     String   @unique @map("user_id")
  profilePic String?
  bio        String?
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model User {
  // Lucia Auth
  id           String    @id @unique
  auth_session Session[]
  key          Key[]

  username String   @unique
  tweets   Tweet[]
  likes    Like[]
  profile  Profile?

  @@map("users")
}

model Session {
  // Lucia Auth
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions")
}

model Key {
  // Lucia Auth
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("keys")
}
